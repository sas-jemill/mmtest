{"scope":"PUBLIC","source":"data sasep.out;\n   dcl package pymas pm;\n   dcl package logger logr('App.MM.Python.DS2');\n   dcl varchar(32767) character set utf8 pypgm;\n   dcl double resultCode revision;\n   dcl varchar(100) \"JOB\";\n   dcl varchar(100) \"REASON\";\n   dcl double \"CLAGE\";\n   dcl double \"CLNO\";\n   dcl double \"DEBTINC\";\n   dcl double \"DELINQ\";\n   dcl double \"DEROG\";\n   dcl double \"NINQ\";\n   dcl double \"YOJ\";\n   dcl double \"EM_EVENTPROBABILITY\";\n   dcl varchar(100) \"EM_CLASSIFICATION\";\n\n   method score(\n   varchar(100) \"JOB\",\n   varchar(100) \"REASON\",\n   double \"CLAGE\",\n   double \"CLNO\",\n   double \"DEBTINC\",\n   double \"DELINQ\",\n   double \"DEROG\",\n   double \"NINQ\",\n   double \"YOJ\",\n   in_out double resultCode,\n   in_out double \"EM_EVENTPROBABILITY\",\n   in_out varchar(100) \"EM_CLASSIFICATION\");\n\n      resultCode = revision = 0;\n      if null(pm) then do;\n         pm = _new_ pymas();\n         resultCode = pm.useModule('model_exec_7eb7ee50-253b-40cf-8257-36a7f8e1f8c6', 1);\n         if resultCode then do;\n            resultCode = pm.appendSrcLine('import sys');\n            resultCode = pm.appendSrcLine('sys.path.append(\"/modules/e5fe68d3-baea-489b-97e9-14169ceb1de8/\")');\n            resultCode = pm.appendSrcLine('import settings_e5fe68d3_baea_489b_97e9_14169ceb1de8');\n            resultCode = pm.appendSrcLine('settings_e5fe68d3_baea_489b_97e9_14169ceb1de8.pickle_path = \"/modules/e5fe68d3-baea-489b-97e9-14169ceb1de8/\"');\n            resultCode = pm.appendSrcLine('import hmeq_logistic_score');\n            resultCode = pm.appendSrcLine('def scoreHMEQLogisticModel(JOB, REASON, CLAGE, CLNO, DEBTINC, DELINQ, DEROG, NINQ, YOJ):');\n            resultCode = pm.appendSrcLine('    \"Output: EM_EVENTPROBABILITY, EM_CLASSIFICATION\"');\n            resultCode = pm.appendSrcLine('    return hmeq_logistic_score.scoreHMEQLogisticModel(JOB, REASON, CLAGE, CLNO, DEBTINC, DELINQ, DEROG, NINQ, YOJ)');\n\n            revision = pm.publish(pm.getSource(), 'model_exec_7eb7ee50-253b-40cf-8257-36a7f8e1f8c6');\n            if ( revision \u003c 1 ) then do;\n               logr.log( 'e', 'py.publish() failed.');\n               resultCode = -1;\n               return;\n            end;\n         end;\n      end;\n\n      resultCode = pm.useMethod('scoreHMEQLogisticModel');\n      if resultCode then do;\n         logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n         return;\n      end;\n      resultCode = pm.setString('JOB', JOB);\n      if resultCode then\n         logr.log('E', 'setString for JOB failed.  resultCode=$s', resultCode);\n      resultCode = pm.setString('REASON', REASON);\n      if resultCode then\n         logr.log('E', 'setString for REASON failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('CLAGE', CLAGE);\n      if resultCode then\n         logr.log('E', 'setDouble for CLAGE failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('CLNO', CLNO);\n      if resultCode then\n         logr.log('E', 'setDouble for CLNO failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DEBTINC', DEBTINC);\n      if resultCode then\n         logr.log('E', 'setDouble for DEBTINC failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DELINQ', DELINQ);\n      if resultCode then\n         logr.log('E', 'setDouble for DELINQ failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DEROG', DEROG);\n      if resultCode then\n         logr.log('E', 'setDouble for DEROG failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('NINQ', NINQ);\n      if resultCode then\n         logr.log('E', 'setDouble for NINQ failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('YOJ', YOJ);\n      if resultCode then\n         logr.log('E', 'setDouble for YOJ failed.  resultCode=$s', resultCode);\n      resultCode = pm.execute();\n      if (resultCode) then\n         logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n      else do;\n         \"EM_EVENTPROBABILITY\" = pm.getDouble('EM_EVENTPROBABILITY');\n         \"EM_CLASSIFICATION\" = pm.getString('EM_CLASSIFICATION');\n      end;\n   end;\n\n   method run();\n      set SASEP.IN;\n      score(\"JOB\",\"REASON\",\"CLAGE\",\"CLNO\",\"DEBTINC\",\"DELINQ\",\"DEROG\",\"NINQ\",\"YOJ\", resultCode, \"EM_EVENTPROBABILITY\", \"EM_CLASSIFICATION\");\n   end;\nenddata;\n endpackage;","properties":[{"name":"sourceURI","value":"/modelRepository/models/e5fe68d3-baea-489b-97e9-14169ceb1de8"}]}