/*----------------------------------------------------------------------------------*/
/* Product:            Visual Data Mining and Machine Learning                      */
/* Release Version:    V2024.07                                                     */
/* Component Version:  V2024.06                                                     */
/* CAS Version:        V.04.00M0P07152024                                           */
/* SAS Version:        V.04.00M0P071524                                             */
/* Site Number:        70180938                                                     */
/* Host:               sas-cas-server-default-client                                */
/* Encoding:           utf-8                                                        */
/* Java Encoding:      UTF8                                                         */
/* Locale:             en_US                                                        */
/* Project GUID:       fcd8d022-b5d6-49cb-81a1-00a9c51db190                         */
/* Node GUID:          ca1621cd-8808-4435-aac0-0b46ecbe8d37                         */
/* Node Id:            BYPCPSR57IPW06VYXBE5L95IV                                    */
/* Algorithm:          Decision Tree                                                */
/* Generated by:       edmdev                                                       */
/* Date:               08AUG2024:19:53:31                                           */
/*----------------------------------------------------------------------------------*/
package MS_ca1621cd88084435aac00b46ecbe8d37_08AUG2024195331226 / overwrite=yes;
   dcl package score _BYPCPSR57IPW06VYXBE5L95IV();
   dcl double EM_EVENTPROBABILITY;
   dcl double "DEBTINC";
   dcl nchar(12) EM_CLASSIFICATION;
   dcl double EM_PROBABILITY;
   dcl double "VALUE";
   dcl double "DEROG";
   dcl nchar(16) "JOB";
   dcl double "DELINQ";
   dcl double "CLNO";
   dcl double "MORTDUE";
   dcl double "CLAGE";
   dcl double "NINQ";
   dcl double "P_BAD1" having label n'Predicted: BAD=1';
   dcl double "P_BAD0" having label n'Predicted: BAD=0';
   dcl nchar(32) "I_BAD" having label n'Into: BAD';
   dcl nchar(4) "_WARN_" having label n'Warnings';
   dcl double "_leaf_id_" having label n'_leaf_id_';
   varlist allvars [_all_];
 
    
   method init();
      _BYPCPSR57IPW06VYXBE5L95IV.setvars(allvars);
      _BYPCPSR57IPW06VYXBE5L95IV.setkey(n'79E3C467C911162390AE466776D7F040D6F62E31');
   end;
    
   method post_BYPCPSR57IPW06VYXBE5L95IV();
      dcl double _P_;
       
      if "P_BAD0" = . then "P_BAD0" = 0.8005033557;
      if "P_BAD1" = . then "P_BAD1" = 0.1994966443;
      if MISSING("I_BAD") then do ;
      _P_ = 0.0;
      if "P_BAD1" > _P_ then do ;
      _P_ = "P_BAD1";
      "I_BAD" = '           1';
      end;
      if "P_BAD0" > _P_ then do ;
      _P_ = "P_BAD0";
      "I_BAD" = '           0';
      end;
      end;
      EM_EVENTPROBABILITY = "P_BAD1";
      EM_CLASSIFICATION = "I_BAD";
      EM_PROBABILITY = MAX("P_BAD0", "P_BAD1");
    
   end;
    
 
   method score(
      double "CLAGE",
      double "CLNO",
      double "DEBTINC",
      double "DELINQ",
      double "DEROG",
      varchar(7) "JOB",
      double "MORTDUE",
      double "NINQ",
      double "VALUE",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT char(32) "I_BAD",
      IN_OUT double "P_BAD0",
      IN_OUT double "P_BAD1",
      IN_OUT char(4) "_WARN_",
      IN_OUT double "_leaf_id_"
   );
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DEBTINC"= "DEBTINC";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."VALUE"= "VALUE";
 
      _BYPCPSR57IPW06VYXBE5L95IV.scoreRecord();
      post_BYPCPSR57IPW06VYXBE5L95IV();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "I_BAD"= this."I_BAD";
      "P_BAD0"= this."P_BAD0";
      "P_BAD1"= this."P_BAD1";
      "_WARN_"= this."_WARN_";
      "_leaf_id_"= this."_leaf_id_";
   end;
 
 
   method predictedscore(
      double "CLAGE",
      double "CLNO",
      double "DEBTINC",
      double "DELINQ",
      double "DEROG",
      varchar(7) "JOB",
      double "MORTDUE",
      double "NINQ",
      double "VALUE",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT char(32) "I_BAD",
      IN_OUT double "P_BAD0",
      IN_OUT double "P_BAD1",
      IN_OUT char(4) "_WARN_"
   );
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DEBTINC"= "DEBTINC";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."VALUE"= "VALUE";
 
      _BYPCPSR57IPW06VYXBE5L95IV.scoreRecord();
      post_BYPCPSR57IPW06VYXBE5L95IV();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "I_BAD"= this."I_BAD";
      "P_BAD0"= this."P_BAD0";
      "P_BAD1"= this."P_BAD1";
      "_WARN_"= this."_WARN_";
   end;
 
endpackage;
