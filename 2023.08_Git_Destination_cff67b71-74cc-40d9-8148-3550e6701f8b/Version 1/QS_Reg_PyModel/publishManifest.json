{
  "creationTimeStamp": "2023-08-14T17:25:12.836937Z",
  "createdBy": "edmdev",
  "modifiedTimeStamp": "2023-08-14T17:25:12.836938Z",
  "modifiedBy": "edmdev",
  "id": "c52f32b1-0437-48e7-8021-08521a638931",
  "destinationName": "sas-jemill-git",
  "destination": {
    "creationTimeStamp": "2023-08-14T17:21:26.893117Z",
    "createdBy": "edmdev",
    "modifiedTimeStamp": "2023-08-14T17:21:26.893118Z",
    "modifiedBy": "edmdev",
    "version": 2,
    "id": "c8a090bf-86eb-4003-864d-a62addae6813",
    "name": "sas-jemill-git",
    "destinationType": "git",
    "properties": [
      {
        "name": "credDomainId",
        "value": "sas-jemill-git"
      },
      {
        "name": "remoteRepositoryURL",
        "value": "https://github.com/sas-jemill/mmtest.git"
      },
      {
        "name": "localRepositoryLocation",
        "value": "/mmtest"
      },
      {
        "name": "userEmail",
        "value": "jeff.miller@sas.com"
      },
      {
        "name": "userName",
        "value": "sas-jemill"
      },
      {
        "name": "codeGenerationMode",
        "value": "mas"
      },
      {
        "name": "gitBranch",
        "value": "main"
      },
      {
        "name": "deploymentGitFolder",
        "value": "/deploymentTest"
      }
    ],
    "links": [
      {
        "method": "GET",
        "rel": "up",
        "href": "/modelPublish/destinations",
        "uri": "/modelPublish/destinations",
        "type": "application/vnd.sas.collection"
      },
      {
        "method": "GET",
        "rel": "self",
        "href": "/modelPublish/destinations/sas-jemill-git",
        "uri": "/modelPublish/destinations/sas-jemill-git",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "DELETE",
        "rel": "delete",
        "href": "/modelPublish/destinations/sas-jemill-git",
        "uri": "/modelPublish/destinations/sas-jemill-git"
      },
      {
        "method": "PUT",
        "rel": "update",
        "href": "/modelPublish/destinations/sas-jemill-git",
        "uri": "/modelPublish/destinations/sas-jemill-git",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "GET",
        "rel": "getGitFolders",
        "href": "/modelPublish/destinations/sas-jemill-git/gitFolders",
        "uri": "/modelPublish/destinations/sas-jemill-git/gitFolders",
        "type": "application/vnd.sas.collection"
      }
    ]
  },
  "content": {
    "creationTimeStamp": "0001-01-01T00:00:00Z",
    "modifiedTimeStamp": "0001-01-01T00:00:00Z",
    "modelName": "QS_Reg_PyModel",
    "principalID": "bb5abc4f-7b3f-4463-aebb-855946e39903",
    "codeType": "python",
    "code": "package QS_Reg_PyModel / overwrite=yes;\ndcl package pymas pm;\ndcl package logger logr('App.MM.Python.DS2');\ndcl varchar(32767) character set utf8 pypgm;\ndcl int resultCode revision;\n\nmethod score(varchar(100) \"JOB\",\nvarchar(100) \"REASON\",\ndouble \"CLAGE\",\ndouble \"CLNO\",\ndouble \"DEBTINC\",\ndouble \"DELINQ\",\ndouble \"DEROG\",\ndouble \"NINQ\",\ndouble \"YOJ\",\nin_out double resultCode,\nin_out double \"EM_EVENTPROBABILITY\",\nin_out varchar(100) \"EM_CLASSIFICATION\");\n\n   resultCode = revision = 0;\n   if null(pm) then do;\n      pm = _new_ pymas();\n      resultCode = pm.useModule('model_exec_309782c6-dd7e-4f4c-81a8-4407d04c396d', 1);\n      if resultCode then do;\n         resultCode = pm.appendSrcLine('import sys');\n         resultCode = pm.appendSrcLine('sys.path.append(\"/models/resources/viya/bb5abc4f-7b3f-4463-aebb-855946e39903/\")');\n         resultCode = pm.appendSrcLine('import settings_bb5abc4f_7b3f_4463_aebb_855946e39903');\n         resultCode = pm.appendSrcLine('settings_bb5abc4f_7b3f_4463_aebb_855946e39903.pickle_path = \"/models/resources/viya/bb5abc4f-7b3f-4463-aebb-855946e39903/\"');\n         resultCode = pm.appendSrcLine('import hmeq_logistic_score_d98fe0b6_d7c3_477b_b2cf_629b7e5b9551');\n         resultCode = pm.appendSrcLine('def scoreHMEQLogisticModel(JOB, REASON, CLAGE, CLNO, DEBTINC, DELINQ, DEROG, NINQ, YOJ):');\n         resultCode = pm.appendSrcLine('    \"Output: EM_EVENTPROBABILITY, EM_CLASSIFICATION\"');\n         resultCode = pm.appendSrcLine('    return hmeq_logistic_score_d98fe0b6_d7c3_477b_b2cf_629b7e5b9551.scoreHMEQLogisticModel(JOB, REASON, CLAGE, CLNO, DEBTINC, DELINQ, DEROG, NINQ, YOJ)');\n\n         revision = pm.publish(pm.getSource(), 'model_exec_309782c6-dd7e-4f4c-81a8-4407d04c396d');\n         if ( revision \u003c 1 ) then do;\n            logr.log( 'e', 'py.publish() failed.');\n            resultCode = -1;\n            return;\n         end;\n      end;\n   end;\n\n   resultCode = pm.useMethod('scoreHMEQLogisticModel');\n   if resultCode then do;\n      logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n      return;\n   end;\n   resultCode = pm.setString('JOB', JOB);\n   if resultCode then\n      logr.log('E', 'setString for JOB failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('REASON', REASON);\n   if resultCode then\n      logr.log('E', 'setString for REASON failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('CLAGE', CLAGE);\n   if resultCode then\n      logr.log('E', 'setDouble for CLAGE failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('CLNO', CLNO);\n   if resultCode then\n      logr.log('E', 'setDouble for CLNO failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DEBTINC', DEBTINC);\n   if resultCode then\n      logr.log('E', 'setDouble for DEBTINC failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DELINQ', DELINQ);\n   if resultCode then\n      logr.log('E', 'setDouble for DELINQ failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DEROG', DEROG);\n   if resultCode then\n      logr.log('E', 'setDouble for DEROG failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('NINQ', NINQ);\n   if resultCode then\n      logr.log('E', 'setDouble for NINQ failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('YOJ', YOJ);\n   if resultCode then\n      logr.log('E', 'setDouble for YOJ failed.  resultCode=$s', resultCode);\n   resultCode = pm.execute();\n   if (resultCode) then\n      logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n   else do;\n      \"EM_EVENTPROBABILITY\" = pm.getDouble('EM_EVENTPROBABILITY');\n      \"EM_CLASSIFICATION\" = pm.getString('EM_CLASSIFICATION');\n   end;\nend;\n\nendpackage;\n",
    "sourceURI": "/modelRepository/models/bb5abc4f-7b3f-4463-aebb-855946e39903",
    "projectID": "cff67b71-74cc-40d9-8148-3550e6701f8b",
    "projectVersionID": "0555df75-2bbb-48bd-9e54-ef6a1c54f1fd",
    "modelID": "bb5abc4f-7b3f-4463-aebb-855946e39903",
    "modelVersionID": "1.0",
    "publishLevel": "model",
    "variableXML": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cScore\u003e\n  \u003cTargetList\u003e\u003c/TargetList\u003e\n  \u003cProducer\u003e\n    \u003cName\u003eSAS Model Manager\u003c/Name\u003e\n    \u003cVersion\u003e15.1\u003c/Version\u003e\n  \u003c/Producer\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"JOB\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"REASON\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"CLAGE\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"CLNO\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"DEBTINC\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"DELINQ\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"DEROG\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"NINQ\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"YOJ\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cOutput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"EM_EVENTPROBABILITY\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Output\u003e\n  \u003cOutput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"EM_CLASSIFICATION\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Output\u003e\n\u003c/Score\u003e"
  },
  "properties": {
    "gitFolderPath": "QS_Reg_PyModel",
    "gitRepositoryURL": "https://github.com/sas-jemill/mmtest.git"
  },
  "sourceURI": "/modelRepository/models/bb5abc4f-7b3f-4463-aebb-855946e39903",
  "inputVariables": null,
  "outputVariables": null,
  "component": {},
  "product": {},
  "service": {
    "name": "Model Publish service"
  },
  "baseImage": {}
}